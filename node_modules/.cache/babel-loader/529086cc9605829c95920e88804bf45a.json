{"ast":null,"code":"var _jsxFileName = \"/Users/ginnyn/Desktop/quadra/src/grid/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Cell from \"./cell\";\nimport style from \"./style.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst character = {\n  \"maxHP\": 100,\n  \"currentHP\": 100,\n  \"strength\": 2,\n  \"active\": false,\n  \"suceptible\": false\n};\n\nconst Grid = _ref => {\n  _s();\n\n  let {\n    map\n  } = _ref;\n  const [cells, setCells] = useState([]);\n  const [playerActive, setPlayerActive] = useState({});\n  const [teamRed, setTeamRed] = useState([]);\n  const [teamBlue, setTeamBlue] = useState([]);\n  const [turn, setTurn] = useState('red');\n  useEffect(() => {\n    const cells = [];\n    const teamRed = [];\n    const teamBlue = [];\n\n    for (let x = 0; x < 10; x++) {\n      for (let y = 0; y < 10; y++) {\n        if (map[`${x}${y}`]) {\n          if (map[`${x}${y}`].player) {\n            const newChar = { ...character,\n              ...map[`${x}${y}`].player\n            };\n            cells.push({\n              x,\n              y,\n              activated: false,\n              ...map[`${x}${y}`],\n              player: newChar\n            });\n            if (newChar.team === \"blue\") teamBlue.push(newChar);else teamRed.push(newChar);\n          } else cells.push({\n            x,\n            y,\n            activated: false,\n            ...map[`${x}${y}`],\n            player: false\n          });\n        } else cells.push({\n          x,\n          y,\n          player: false,\n          activated: false,\n          usable: true,\n          underAttack: false\n        });\n      }\n    }\n\n    setCells(cells);\n    setTeamRed(teamRed);\n    setTeamBlue(teamBlue);\n  }, []);\n\n  const inactivateCurrentPlayer = _ref2 => {\n    let {\n      x,\n      y\n    } = _ref2;\n    const temp = [...cells];\n    temp[10 * x + y].player.tired = true;\n    if (temp[10 * playerActive.x - 1 + playerActive.y]) temp[10 * playerActive.x - 1 + playerActive.y].activated = false;\n    if (temp[10 * playerActive.x + 1 + playerActive.y]) temp[10 * playerActive.x + 1 + playerActive.y].activated = false;\n    if (temp[10 * (playerActive.x - 1) + playerActive.y]) temp[10 * (playerActive.x - 1) + playerActive.y].activated = false;\n    if (temp[10 * (playerActive.x + 1) + playerActive.y]) temp[10 * (playerActive.x + 1) + playerActive.y].activated = false;\n    setCells(temp);\n  };\n\n  const movePlayer = _ref3 => {\n    let {\n      x,\n      y\n    } = _ref3;\n    const temp = [...cells];\n    temp[10 * x + y].player = temp[10 * playerActive.x + playerActive.y].player;\n    if (temp[10 * playerActive.x + playerActive.y]) temp[10 * playerActive.x + playerActive.y].player = false;\n    setCells(temp);\n    inactivateCurrentPlayer({\n      x,\n      y\n    });\n  };\n\n  const underAttack = _ref4 => {\n    let {\n      x,\n      y\n    } = _ref4;\n    const temp = [...cells];\n    temp[10 * x + y].player.currentHP -= temp[10 * playerActive.x + playerActive.y].player.strength;\n    setCells(temp);\n    inactivateCurrentPlayer(playerActive);\n  };\n\n  const changeTurn = () => {\n    if (turn === 'red') {\n      const teamRedT = teamRed.map(item => {\n        item.tired = false;\n        return item;\n      });\n      setTeamRed(teamRedT);\n      setTurn('blue');\n    } else {\n      const teamBlueT = teamBlue.map(item => {\n        item.tired = false;\n        return item;\n      });\n      setTeamBlue(teamBlueT);\n      setTurn('red');\n    }\n  };\n\n  const activateAttack = _ref5 => {\n    let {\n      x,\n      y\n    } = _ref5;\n    const temp = [...cells];\n\n    if (playerActive.x === x && playerActive.y === y) {\n      if (temp[10 * x - 1 + y]) {\n        if (temp[10 * x - 1 + y].player) temp[10 * x - 1 + y].player.suceptible = false;\n        temp[10 * x - 1 + y].underAttack = false;\n      }\n\n      if (temp[10 * x + 1 + y]) {\n        if (temp[10 * x + 1 + y].player) temp[10 * x + 1 + y].player.suceptible = false;\n        temp[10 * x + 1 + y].underAttack = false;\n      }\n\n      if (temp[10 * (x - 1) + y]) {\n        if (temp[10 * (x - 1) + y].player) temp[10 * (x - 1) + y].player.suceptible = false;\n        temp[10 * (x - 1) + y].underAttack = false;\n      }\n\n      if (temp[10 * (x + 1) + y]) {\n        if (temp[10 * (x + 1) + y].player) temp[10 * (x + 1) + y].player.suceptible = false;\n        temp[10 * (x + 1) + y].underAttack = false;\n      }\n\n      setPlayerActive({});\n    } else {\n      if (playerActive.x) {\n        const {\n          x,\n          y\n        } = playerActive;\n\n        if (temp[10 * x - 1 + y]) {\n          if (temp[10 * x - 1 + y].player) temp[10 * x - 1 + y].player.suceptible = false;\n          temp[10 * x - 1 + y].underAttack = false;\n        }\n\n        if (temp[10 * x + 1 + y]) {\n          if (temp[10 * x + 1 + y].player) temp[10 * x + 1 + y].player.suceptible = false;\n          temp[10 * x + 1 + y].underAttack = false;\n        }\n\n        if (temp[10 * (x - 1) + y]) {\n          if (temp[10 * (x - 1) + y].player) temp[10 * (x - 1) + y].player.suceptible = false;\n          temp[10 * (x - 1) + y].underAttack = false;\n        }\n\n        if (temp[10 * (x + 1) + y]) {\n          if (temp[10 * (x + 1) + y].player) temp[10 * (x + 1) + y].player.suceptible = false;\n          temp[10 * (x + 1) + y].underAttack = false;\n        }\n      }\n\n      if (temp[10 * x - 1 + y]) {\n        if (temp[10 * x - 1 + y].player) temp[10 * x - 1 + y].player.suceptible = true;\n        temp[10 * x - 1 + y].underAttack = true;\n      }\n\n      if (temp[10 * x + 1 + y]) {\n        if (temp[10 * x + 1 + y].player) temp[10 * x + 1 + y].player.suceptible = true;\n        temp[10 * x + 1 + y].underAttack = true;\n      }\n\n      if (temp[10 * (x - 1) + y]) {\n        if (temp[10 * (x - 1) + y].player) temp[10 * (x - 1) + y].player.suceptible = true;\n        temp[10 * (x - 1) + y].underAttack = true;\n      }\n\n      if (temp[10 * (x + 1) + y]) {\n        if (temp[10 * (x + 1) + y].player) temp[10 * (x + 1) + y].player.suceptible = true;\n        temp[10 * (x + 1) + y].underAttack = true;\n      }\n\n      setPlayerActive({\n        x,\n        y\n      });\n    }\n\n    setCells(temp);\n  };\n\n  const activateMove = _ref6 => {\n    let {\n      x,\n      y\n    } = _ref6;\n    const temp = [...cells];\n\n    if (playerActive.x === x && playerActive.y === y) {\n      if (temp[10 * x - 1 + y]) temp[10 * x - 1 + y].activated = false;\n      if (temp[10 * x + 1 + y]) temp[10 * x + 1 + y].activated = false;\n      if (temp[10 * (x - 1) + y]) temp[10 * (x - 1) + y].activated = false;\n      if (temp[10 * (x + 1) + y]) temp[10 * (x + 1) + y].activated = false;\n      setPlayerActive({});\n    } else {\n      if (playerActive.x) {\n        const {\n          x,\n          y\n        } = playerActive;\n        if (temp[10 * x - 1 + y]) temp[10 * x - 1 + y].activated = false;\n        if (temp[10 * x + 1 + y]) temp[10 * x + 1 + y].activated = false;\n        if (temp[10 * (x - 1) + y]) temp[10 * (x - 1) + y].activated = false;\n        if (temp[10 * (x + 1) + y]) temp[10 * (x + 1) + y].activated = false;\n      }\n\n      if (temp[10 * x - 1 + y]) temp[10 * x - 1 + y].activated = true;\n      if (temp[10 * x + 1 + y]) temp[10 * x + 1 + y].activated = true;\n      if (temp[10 * (x - 1) + y]) temp[10 * (x - 1) + y].activated = true;\n      if (temp[10 * (x + 1) + y]) temp[10 * (x + 1) + y].activated = true;\n      setPlayerActive({\n        x,\n        y\n      });\n    }\n\n    setCells(temp);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.playboard,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.gridSetting,\n      children: cells.map(item => /*#__PURE__*/_jsxDEV(Cell, {\n        onMove: movePlayer,\n        x: item.x,\n        y: item.y,\n        player: item.player,\n        activated: item.activated,\n        usable: item.usable,\n        turn: turn,\n        activateAttack: () => activateAttack(item),\n        activateMove: () => activateMove(item),\n        underAttack: () => underAttack(item)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 30\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Turn \", turn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeTurn,\n        children: \"End Turn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Team Red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }, this), teamRed.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [index, \": \", item.currentHP, \"/\", item.maxHP]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 46\n        }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Team Blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }, this), teamBlue.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [index, \": \", item.currentHP, \"/\", item.maxHP]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 47\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Grid, \"J0llTayDaW2nL77UsiSFphz0Jm4=\");\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/ginnyn/Desktop/quadra/src/grid/index.js"],"names":["React","useEffect","useState","Cell","style","character","Grid","map","cells","setCells","playerActive","setPlayerActive","teamRed","setTeamRed","teamBlue","setTeamBlue","turn","setTurn","x","y","player","newChar","push","activated","team","usable","underAttack","inactivateCurrentPlayer","temp","tired","movePlayer","currentHP","strength","changeTurn","teamRedT","item","teamBlueT","activateAttack","suceptible","activateMove","playboard","gridSetting","index","maxHP"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport Cell from \"./cell\"\nimport style  from \"./style.module.css\"\n\nconst character = {\n    \"maxHP\": 100,\n    \"currentHP\": 100,\n    \"strength\": 2,\n    \"active\": false,\n    \"suceptible\": false,\n}\n\nconst Grid = ({ map } ) => {\n\n    const [cells, setCells] = useState([]);\n    const [playerActive, setPlayerActive] = useState({});\n    const [teamRed, setTeamRed] = useState([]);\n    const [teamBlue, setTeamBlue] = useState([]);\n    const [turn, setTurn] = useState('red');\n\n    useEffect (() => {\n        const cells = [];\n        const teamRed = [];\n        const teamBlue = [];\n        for(let x = 0; x < 10; x++) {\n            for(let y = 0; y < 10; y++) {\n                if(map[`${x}${y}`]) {\n                    if(map[`${x}${y}`].player){\n                        const newChar = {...character, ...map[`${x}${y}`].player} ;\n                        cells.push({x, y, activated: false, ...map[`${x}${y}`], player: newChar });\n                        if(newChar.team === \"blue\") teamBlue.push(newChar);\n                        else teamRed.push(newChar);\n                    } else cells.push({x, y, activated: false, ...map[`${x}${y}`], player: false});\n                }\n                else cells.push({x, y, player: false, activated: false, usable: true, underAttack: false });\n            }\n        }\n        setCells(cells);\n        setTeamRed(teamRed);\n        setTeamBlue(teamBlue);\n    }, []);\n\n    const inactivateCurrentPlayer = ({x,y}) => {\n        const temp = [...cells];\n        temp[10*x + y].player.tired = true;\n        if(temp[(10*playerActive.x)-1+playerActive.y]) temp[(10*playerActive.x)-1+playerActive.y].activated = false;\n        if(temp[(10*playerActive.x)+1+playerActive.y]) temp[(10*playerActive.x)+1+playerActive.y].activated = false;\n        if(temp[(10*(playerActive.x-1))+playerActive.y]) temp[(10*(playerActive.x-1))+playerActive.y].activated = false;\n        if(temp[(10*(playerActive.x+1))+playerActive.y]) temp[(10*(playerActive.x+1))+playerActive.y].activated = false;\n        setCells(temp);\n    }\n\n    const movePlayer = ({x, y}) => {\n        const temp = [...cells];\n        temp[10*x + y].player = temp[10*playerActive.x + playerActive.y].player;\n        if(temp[10*playerActive.x + playerActive.y]) temp[10*playerActive.x + playerActive.y].player = false;\n        setCells(temp);\n        inactivateCurrentPlayer({x, y});\n    }\n\n    const underAttack = ({x , y}) => {\n        const temp = [...cells];\n        temp[10*x + y].player.currentHP -= temp[10*playerActive.x + playerActive.y].player.strength;\n        setCells(temp);\n        inactivateCurrentPlayer(playerActive);\n    }\n\n    const changeTurn = () => {\n        if(turn==='red'){\n            const teamRedT = teamRed.map((item) => {\n                item.tired = false;\n                return item;\n            });\n            setTeamRed(teamRedT);\n            setTurn('blue');\n        } else {\n            const teamBlueT = teamBlue.map((item) => {\n                item.tired = false;\n                return item;\n            });\n            setTeamBlue(teamBlueT);\n            setTurn('red');\n        }\n    }\n\n    const activateAttack = ({x, y}) => {\n        const temp = [...cells];\n        if(playerActive.x === x && playerActive.y === y) {\n            if(temp[(10*x)-1+y]) {\n                if(temp[(10*x)-1+y].player) temp[(10*x)-1+y].player.suceptible = false; \n                temp[(10*x)-1+y].underAttack = false;\n            }\n            if(temp[(10*x)+1+y]){\n                if(temp[(10*x)+1+y].player) temp[(10*x)+1+y].player.suceptible = false; \n                temp[(10*x)+1+y].underAttack = false;\n            }\n            if(temp[(10*(x-1))+y]){ \n                if(temp[(10*(x-1))+y].player) temp[(10*(x-1))+y].player.suceptible = false; \n                temp[(10*(x-1))+y].underAttack = false;\n            }\n            if(temp[(10*(x+1))+y]) {\n                if(temp[(10*(x+1))+y].player) temp[(10*(x+1))+y].player.suceptible = false; \n                temp[(10*(x+1))+y].underAttack = false;\n            }\n            setPlayerActive({});\n        } else {\n            if(playerActive.x) {\n                const {x, y} = playerActive;\n                if(temp[(10*x)-1+y]) {\n                    if(temp[(10*x)-1+y].player) temp[(10*x)-1+y].player.suceptible = false; \n                    temp[(10*x)-1+y].underAttack = false;\n                }\n                if(temp[(10*x)+1+y]){\n                    if(temp[(10*x)+1+y].player) temp[(10*x)+1+y].player.suceptible = false; \n                    temp[(10*x)+1+y].underAttack = false;\n                }\n                if(temp[(10*(x-1))+y]){ \n                    if(temp[(10*(x-1))+y].player) temp[(10*(x-1))+y].player.suceptible = false; \n                    temp[(10*(x-1))+y].underAttack = false;\n                }\n                if(temp[(10*(x+1))+y]) {\n                    if(temp[(10*(x+1))+y].player) temp[(10*(x+1))+y].player.suceptible = false; \n                    temp[(10*(x+1))+y].underAttack = false;\n                }\n            }\n            if(temp[(10*x)-1+y]) {\n                if(temp[(10*x)-1+y].player) temp[(10*x)-1+y].player.suceptible = true; \n                temp[(10*x)-1+y].underAttack = true;\n            }\n            if(temp[(10*x)+1+y]){\n                if(temp[(10*x)+1+y].player) temp[(10*x)+1+y].player.suceptible = true; \n                temp[(10*x)+1+y].underAttack = true;\n            }\n            if(temp[(10*(x-1))+y]){ \n                if(temp[(10*(x-1))+y].player) temp[(10*(x-1))+y].player.suceptible = true; \n                temp[(10*(x-1))+y].underAttack = true;\n            }\n            if(temp[(10*(x+1))+y]) {\n                if(temp[(10*(x+1))+y].player) temp[(10*(x+1))+y].player.suceptible = true; \n                temp[(10*(x+1))+y].underAttack = true;\n            }\n            setPlayerActive({x, y});\n        }\n        setCells(temp);\n    }\n\n    const activateMove = ({x, y}) => {\n        const temp = [...cells];\n        if(playerActive.x === x && playerActive.y === y) {\n            if(temp[(10*x)-1+y]) temp[(10*x)-1+y].activated = false;\n            if(temp[(10*x)+1+y]) temp[(10*x)+1+y].activated = false;\n            if(temp[(10*(x-1))+y]) temp[(10*(x-1))+y].activated = false;\n            if(temp[(10*(x+1))+y]) temp[(10*(x+1))+y].activated = false;\n            setPlayerActive({});\n        } else {\n            if(playerActive.x) {\n                const {x, y} = playerActive;\n                if(temp[(10*x)-1+y]) temp[(10*x)-1+y].activated = false;\n                if(temp[(10*x)+1+y]) temp[(10*x)+1+y].activated = false;\n                if(temp[(10*(x-1))+y]) temp[(10*(x-1))+y].activated = false;\n                if(temp[(10*(x+1))+y]) temp[(10*(x+1))+y].activated = false;\n            }\n            if(temp[(10*x)-1+y]) temp[(10*x)-1+y].activated = true;\n            if(temp[(10*x)+1+y]) temp[(10*x)+1+y].activated = true;\n            if(temp[(10*(x-1))+y])temp[(10*(x-1))+y].activated = true;\n            if(temp[(10*(x+1))+y]) temp[(10*(x+1))+y].activated = true;\n            setPlayerActive({x, y});\n        }\n        setCells(temp);\n    }\n\n    return <div className={style.playboard}>\n        <div className={style.gridSetting}>\n        {cells.map((item) => <Cell \n                onMove={movePlayer}\n                x={item.x} \n                y={item.y} \n                player={item.player}\n                activated={item.activated}\n                usable={item.usable}\n                turn={turn}\n                activateAttack={() => activateAttack(item)}\n                activateMove={() => activateMove(item)}\n                underAttack={() => underAttack(item)}\n            />)}   \n        </div>\n        <div>\n            <p>Turn {turn}</p>\n            <button onClick={changeTurn}>End Turn</button>\n            <ul>\n                <li>Team Red</li>\n                {teamRed.map((item, index)=> <li>{index}: {item.currentHP}/{item.maxHP}</li>)}\n                <li>Team Blue</li>\n                {teamBlue.map((item, index)=> <li>{index}: {item.currentHP}/{item.maxHP}</li>)}\n            </ul>\n        </div>\n    </div>;\n}\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}