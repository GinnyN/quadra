{"ast":null,"code":"var _jsxFileName = \"/Users/ginnyn/Desktop/quadra/src/grid/cell/index.js\";\nimport React from \"react\";\nimport style from \"./style.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cell = _ref => {\n  let {\n    onClick,\n    onMove,\n    onAttack,\n    x,\n    y,\n    player,\n    activated,\n    usable\n  } = _ref;\n\n  const toggleDot = () => {\n    if (!usable) return;\n\n    if (activated && player) {\n      onAttack({\n        x,\n        y\n      });\n      return;\n    }\n\n    if (player) {\n      onClick({\n        x,\n        y\n      });\n      return;\n    }\n\n    if (activated) {\n      onMove({\n        x,\n        y\n      });\n      return;\n    }\n\n    return;\n  };\n\n  console.log(player);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${style.cell} ${player.team === 'blue' && style.blue} ${player.team === 'red' && style.red} ${usable && activated && style.activated} ${!usable && style.noUsable}`,\n    onClick: toggleDot,\n    children: player && player.currentHP > 0 && /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [player.team, /*#__PURE__*/_jsxDEV(\"img\", {\n        className: style.dot,\n        src: require('./../../img/dot.png')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Cell;\nexport default Cell;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"sources":["/Users/ginnyn/Desktop/quadra/src/grid/cell/index.js"],"names":["React","style","Cell","onClick","onMove","onAttack","x","y","player","activated","usable","toggleDot","console","log","cell","team","blue","red","noUsable","currentHP","dot","require"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAEA,MAAMC,IAAI,GAAG,QAAoE;AAAA,MAAnE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA,CAA7B;AAAgCC,IAAAA,CAAhC;AAAmCC,IAAAA,MAAnC;AAA2CC,IAAAA,SAA3C;AAAsDC,IAAAA;AAAtD,GAAmE;;AAE7E,QAAMC,SAAS,GAAG,MAAM;AACpB,QAAG,CAACD,MAAJ,EAAY;;AACZ,QAAGD,SAAS,IAAID,MAAhB,EAAwB;AACpBH,MAAAA,QAAQ,CAAC;AAACC,QAAAA,CAAD;AAAGC,QAAAA;AAAH,OAAD,CAAR;AACA;AACH;;AACD,QAAGC,MAAH,EAAW;AACPL,MAAAA,OAAO,CAAC;AAACG,QAAAA,CAAD;AAAIC,QAAAA;AAAJ,OAAD,CAAP;AACA;AACH;;AACD,QAAGE,SAAH,EAAc;AACVL,MAAAA,MAAM,CAAC;AAACE,QAAAA,CAAD;AAAIC,QAAAA;AAAJ,OAAD,CAAN;AACA;AACH;;AACD;AACH,GAfD;;AAgBAK,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,sBAAO;AAAK,IAAA,SAAS,EAAG,GAAEP,KAAK,CAACa,IAAK,IAAGN,MAAM,CAACO,IAAP,KAAgB,MAAhB,IAA0Bd,KAAK,CAACe,IAAK,IAAGR,MAAM,CAACO,IAAP,KAAgB,KAAhB,IAAyBd,KAAK,CAACgB,GAAI,IAAGP,MAAM,IAAID,SAAV,IAAuBR,KAAK,CAACQ,SAAU,IAAG,CAACC,MAAD,IAAWT,KAAK,CAACiB,QAAS,EAAnL;AAAsL,IAAA,OAAO,EAAEP,SAA/L;AAAA,cACOH,MAAM,IAAIA,MAAM,CAACW,SAAP,GAAmB,CAA7B,iBACF,QAAC,KAAD,CAAO,QAAP;AAAA,iBACKX,MAAM,CAACO,IADZ,eAEI;AAAK,QAAA,SAAS,EAAEd,KAAK,CAACmB,GAAtB;AAA2B,QAAA,GAAG,EAAEC,OAAO,CAAC,qBAAD;AAAvC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFL;AAAA;AAAA;AAAA;AAAA,UAAP;AAOH,CA1BD;;KAAMnB,I;AA4BN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport style from \"./style.module.css\";\n\nconst Cell = ({ onClick, onMove, onAttack, x, y, player, activated, usable }) => {\n\n    const toggleDot = () => {\n        if(!usable) return;\n        if(activated && player) {\n            onAttack({x,y});\n            return\n        }\n        if(player) {\n            onClick({x, y});\n            return\n        }\n        if(activated) {\n            onMove({x, y});\n            return\n        }\n        return\n    }\n    console.log(player)\n    return <div className={`${style.cell} ${player.team === 'blue' && style.blue} ${player.team === 'red' && style.red} ${usable && activated && style.activated} ${!usable && style.noUsable}`} onClick={toggleDot}>\n                { player && player.currentHP > 0 && \n                <React.Fragment>\n                    {player.team}\n                    <img className={style.dot} src={require('./../../img/dot.png')} />\n                </React.Fragment>}\n           </div>\n}\n\nexport default Cell;"]},"metadata":{},"sourceType":"module"}