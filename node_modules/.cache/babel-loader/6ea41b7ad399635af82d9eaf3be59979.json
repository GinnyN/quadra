{"ast":null,"code":"var _jsxFileName = \"/Users/ximena.contreras/Desktop/test/quadra/src/grid/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Cell from \"./cell\";\nimport style from \"./style.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = () => {\n  _s();\n\n  const [cells, setCells] = useState([]);\n  useEffect(() => {\n    const cells = [];\n\n    for (let x = 0; x < 10; x++) {\n      for (let y = 0; y < 10; y++) {\n        cells[x][y] = {\n          x,\n          y,\n          player: false\n        };\n      }\n    }\n\n    setCells(cells);\n  }, []);\n\n  const toggleCells = _ref => {\n    let {\n      x,\n      y\n    } = _ref;\n    console.log(\"click\");\n    const temp = cells.map(item => {\n      if (item.x === x && item.y === y) item.player = true;else item.player = false;\n      return item;\n    });\n    console.log(temp);\n    setCells(temp);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.gridSetting\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Grid, \"I3MqqXdYWTqqYpM9h+iSfl9kmoM=\");\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/ximena.contreras/Desktop/test/quadra/src/grid/index.js"],"names":["React","useEffect","useState","Cell","style","Grid","cells","setCells","x","y","player","toggleCells","console","log","temp","map","item","gridSetting"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAmB,oBAAnB;;;AAEA,MAAMC,IAAI,GAAG,MAAO;AAAA;;AAEhB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAE,MAAM;AACb,UAAMK,KAAK,GAAG,EAAd;;AACA,SAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBH,QAAAA,KAAK,CAACE,CAAD,CAAL,CAASC,CAAT,IAAe;AAACD,UAAAA,CAAD;AAAIC,UAAAA,CAAJ;AAAOC,UAAAA,MAAM,EAAE;AAAf,SAAf;AACH;AACJ;;AACDH,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMK,WAAW,GAAG,QAAY;AAAA,QAAX;AAACH,MAAAA,CAAD;AAAIC,MAAAA;AAAJ,KAAW;AAC5BG,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAMC,IAAI,GAAGR,KAAK,CAACS,GAAN,CAAWC,IAAD,IAAU;AAC7B,UAAGA,IAAI,CAACR,CAAL,KAAWA,CAAX,IAAgBQ,IAAI,CAACP,CAAL,KAAWA,CAA9B,EAAiCO,IAAI,CAACN,MAAL,GAAc,IAAd,CAAjC,KACKM,IAAI,CAACN,MAAL,GAAc,KAAd;AACL,aAAOM,IAAP;AACH,KAJY,CAAb;AAKAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACAP,IAAAA,QAAQ,CAACO,IAAD,CAAR;AACH,GATD;;AAWA,sBAAO;AAAK,IAAA,SAAS,EAAEV,KAAK,CAACa;AAAtB;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH,CA1BD;;GAAMZ,I;;KAAAA,I;AA4BN,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport Cell from \"./cell\"\nimport style  from \"./style.module.css\"\n\nconst Grid = ( ) => {\n\n    const [cells, setCells] = useState([]);\n    useEffect (() => {\n        const cells = [];\n        for(let x = 0; x < 10; x++) {\n            for(let y = 0; y < 10; y++) {\n                cells[x][y] = ({x, y, player: false});\n            }\n        }\n        setCells(cells);\n    }, []);\n\n    const toggleCells = ({x, y}) => {\n        console.log(\"click\")\n        const temp = cells.map((item) => {\n            if(item.x === x && item.y === y) item.player = true;\n            else item.player = false;\n            return item;\n        })\n        console.log(temp);\n        setCells(temp);\n    };\n\n    return <div className={style.gridSetting}>\n    </div>;\n}\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}