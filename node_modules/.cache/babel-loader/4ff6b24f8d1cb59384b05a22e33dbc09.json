{"ast":null,"code":"var _jsxFileName = \"/Users/ximena.contreras/Desktop/test/quadra/src/grid/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Cell from \"./cell\";\nimport style from \"./style.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = () => {\n  _s();\n\n  const [cells, setCells] = useState([]);\n  useEffect(() => {\n    const cells = [];\n\n    for (let x = 0; x < 10; x++) {\n      for (let y = 0; y < 10; y++) {\n        cells.push({\n          x,\n          y,\n          player: false,\n          activated: false\n        });\n      }\n    }\n\n    cells[55].player = true;\n    cells[33].player = true;\n    setCells(cells);\n  }, []);\n\n  const toggleCells = _ref => {\n    let {\n      x,\n      y\n    } = _ref;\n    console.log(\"click\");\n    const temp = [...cells];\n    temp[10 * x - 1 + y].activated = !temp[10 * x - 1 + y].activated;\n    temp[10 * x + 1 + y].activated = !temp[10 * x + 1 + y].activated;\n    temp[10 * (x - 1) + y].activated = !temp[10 * (x - 1) + y].activated;\n    temp[10 * (x + 1) + y].activated = !temp[10 * (x + 1) + y].activated;\n    setCells(temp);\n  };\n\n  const movePlayer = _ref2 => {\n    let {\n      x,\n      y\n    } = _ref2;\n    const temp = cells.map(item => {\n      if (item.x === x && item.y === y) item.player = true;else item.player = false;\n      item.activated = false;\n      return item;\n    });\n    setCells(temp);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.gridSetting,\n    children: cells.map(item => /*#__PURE__*/_jsxDEV(Cell, {\n      onClick: toggleCells,\n      onMove: movePlayer,\n      x: item.x,\n      y: item.y,\n      player: item.player,\n      activated: item.activated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Grid, \"I3MqqXdYWTqqYpM9h+iSfl9kmoM=\");\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/ximena.contreras/Desktop/test/quadra/src/grid/index.js"],"names":["React","useEffect","useState","Cell","style","Grid","cells","setCells","x","y","push","player","activated","toggleCells","console","log","temp","movePlayer","map","item","gridSetting"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport Cell from \"./cell\"\nimport style  from \"./style.module.css\"\n\nconst Grid = ( ) => {\n\n    const [cells, setCells] = useState([]);\n    useEffect (() => {\n        const cells = [];\n        for(let x = 0; x < 10; x++) {\n            for(let y = 0; y < 10; y++) {\n                cells.push({x, y, player: false, activated: false })\n            }\n        }\n        cells[55].player = true;\n        cells[33].player = true;\n        setCells(cells);\n    }, []);\n\n    const toggleCells = ({x, y}) => {\n        console.log(\"click\")\n        const temp = [...cells];\n        temp[(10*x)-1+y].activated = !temp[(10*x)-1+y].activated;\n        temp[(10*x)+1+y].activated = !temp[(10*x)+1+y].activated ;\n        temp[(10*(x-1))+y].activated = !temp[(10*(x-1))+y].activated;\n        temp[(10*(x+1))+y].activated = !temp[(10*(x+1))+y].activated;\n        setCells(temp);\n    };\n\n    const movePlayer = ({x, y}) => {\n        const temp = cells.map((item) => {\n            if(item.x === x && item.y === y) item.player = true;\n            else item.player = false;\n            item.activated = false;\n            return item;\n        })\n        setCells(temp);\n    }\n\n    return <div className={style.gridSetting}>\n       {cells.map((item) => <Cell \n            onClick={toggleCells}\n            onMove={movePlayer}\n            x={item.x} \n            y={item.y} \n            player={item.player}\n            activated={item.activated}\n        />)}   \n    </div>;\n}\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}