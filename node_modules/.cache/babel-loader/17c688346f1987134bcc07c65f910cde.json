{"ast":null,"code":"var _jsxFileName = \"/Users/ximena.contreras/Desktop/test/quadra/src/grid/cell/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport style from \"./style.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cell = _ref => {\n  _s();\n\n  let {\n    onClick\n  } = _ref;\n  const [show, setShow] = useState(false);\n\n  const toggleDot = () => {\n    setShow(!show);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.cell,\n    onClick: toggleDot,\n    children: show && /*#__PURE__*/_jsxDEV(\"img\", {\n      className: style.dot,\n      src: require('./../../img/dot.png')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Cell, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = Cell;\nexport default Cell;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"sources":["/Users/ximena.contreras/Desktop/test/quadra/src/grid/cell/index.js"],"names":["React","useState","style","Cell","onClick","show","setShow","toggleDot","cell","dot","require"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAEA,MAAMC,IAAI,GAAG,QAAiB;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMM,SAAS,GAAG,MAAM;AACpBD,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AAEH,GAHD;;AAIA,sBAAO;AAAK,IAAA,SAAS,EAAEH,KAAK,CAACM,IAAtB;AAA4B,IAAA,OAAO,EAAED,SAArC;AAAA,cACOF,IAAI,iBAAI;AAAK,MAAA,SAAS,EAAEH,KAAK,CAACO,GAAtB;AAA2B,MAAA,GAAG,EAAEC,OAAO,CAAC,qBAAD;AAAvC;AAAA;AAAA;AAAA;AAAA;AADf;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAVD;;GAAMP,I;;KAAAA,I;AAYN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport style from \"./style.module.css\";\n\nconst Cell = ({ onClick }) => {\n    const [show, setShow] = useState(false)\n\n    const toggleDot = () => {\n        setShow(!show);\n        \n    }\n    return <div className={style.cell} onClick={toggleDot}>\n                { show && <img className={style.dot} src={require('./../../img/dot.png')} />}\n           </div>\n}\n\nexport default Cell;"]},"metadata":{},"sourceType":"module"}