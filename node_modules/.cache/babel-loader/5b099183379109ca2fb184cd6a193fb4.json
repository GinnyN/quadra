{"ast":null,"code":"var _jsxFileName = \"/Users/ginnyn/Desktop/quadra/src/grid/cell/character/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport style from \"./style.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Character = _ref => {\n  _s();\n\n  let {\n    player,\n    turn\n  } = _ref;\n  const [showMenu, setShowMenu] = useState(false);\n\n  const toggleShowMenu = event => {\n    event.stopPropagation();\n    if (turn === player.team) setShowMenu(!showMenu);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.menu,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Move\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Attack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: toggleShowMenu,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: toggleShowMenu,\n      className: `${style.dot} ${player.tired && style.tired} `,\n      src: require('./../../../img/dot.png')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Character, \"2FjIcsdimgVhm2IsUWodA2ftTZU=\");\n\n_c = Character;\nexport default Character;\n\nvar _c;\n\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"sources":["/Users/ginnyn/Desktop/quadra/src/grid/cell/character/index.js"],"names":["React","useState","style","Character","player","turn","showMenu","setShowMenu","toggleShowMenu","event","stopPropagation","team","menu","dot","tired","require"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAEA,MAAMC,SAAS,GAAG,QAAsB;AAAA;;AAAA,MAArB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAqB;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMO,cAAc,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,eAAN;AACA,QAAGL,IAAI,KAAKD,MAAM,CAACO,IAAnB,EAAyBJ,WAAW,CAAC,CAACD,QAAF,CAAX;AAC5B,GAHD;;AAIA,sBAAO,QAAC,KAAD,CAAO,QAAP;AAAA,eACDA,QAAQ,iBAAI;AAAK,MAAA,SAAS,EAAEJ,KAAK,CAACU,IAAtB;AAAA,6BACV;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAI,UAAA,OAAO,EAAEJ,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADU;AAAA;AAAA;AAAA;AAAA,YADX,eAQH;AACI,MAAA,OAAO,EAAEA,cADb;AAEI,MAAA,SAAS,EAAG,GAAEN,KAAK,CAACW,GAAI,IAAGT,MAAM,CAACU,KAAP,IAAgBZ,KAAK,CAACY,KAAM,GAF3D;AAGI,MAAA,GAAG,EAAEC,OAAO,CAAC,wBAAD;AAHhB;AAAA;AAAA;AAAA;AAAA,YARG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAcH,CArBD;;GAAMZ,S;;KAAAA,S;AAuBN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport style from \"./style.module.css\";\n\nconst Character = ({ player, turn }) => {\n    const [showMenu, setShowMenu] = useState(false);\n\n    const toggleShowMenu = (event) => {\n        event.stopPropagation();\n        if(turn === player.team) setShowMenu(!showMenu);\n    }\n    return <React.Fragment>\n        { showMenu && <div className={style.menu}>\n            <ul>\n                <li>Move</li>\n                <li>Attack</li>\n                <li onClick={toggleShowMenu}>Close</li>\n            </ul>\n        </div> }\n        <img \n            onClick={toggleShowMenu}\n            className={`${style.dot} ${player.tired && style.tired} `} \n            src={require('./../../../img/dot.png')}\n        />\n    </React.Fragment>\n}\n\nexport default Character;"]},"metadata":{},"sourceType":"module"}